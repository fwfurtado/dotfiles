(defcfg
  ;; ** For Linux **
  ;; input  (device-file "/dev/input/by-id/usb-04d9_USB-HID_Keyboard-event-kbd")
  input (device-file "/dev/input/by-id/usb-ITE_Tech._Inc._ITE_Device_8910_-event-kbd")
  ;; input  (device-file "/dev/input/by-id/usb-Matias_Ergo_Pro_Keyboard-event-kbd")
  output (uinput-sink "KMonad output")

  ;; ** For Windows **
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; ** For MacOS **
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  fallthrough true
)

(defsrc
  esc     f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv     1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab     q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps    a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft      z    x    c    v    b    n    m    ,    .    /    rsft
  lctl    lmet lalt           spc            ralt rmet cmp  rctl
)
 
(defalias
  ext  (layer-toggle extend) ;; Bind 'ext' to the Extend Layer
)

(defalias
  cpy C-c
  pst C-v
  cut C-x
  udo C-z
  all C-a
  fnd C-f
  bk Back
  fw Forward
)

(deflayer colemak-dh
  esc     f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv      1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab      q    w    f    p    b    j    l    u    y    ;    [    ]    \\
  @ext     a    r    s    t    g    m    n    e    i    o    '    ret
  lsft     z    x    c    d    v    k    h    ,    .    /    rsft
  lctl     lmet lalt           spc            ralt rmet _    _
)

(deflayer extend
  _        _    _    _    _    _    _    _    _    _    _    _    _    
  _        _    _    _    _    _    _    _    _    _    _    _    _    _
  _        _    _    _    _    _    _    _    _    _    _    _    _    _
  _        _    _    _    _    _    _    lft  down up   rght _    _ 
  _        _    _    _    _    _    _    home pgdn pgup end  _ 
  _        _    _              _              _    _    _    _
)


(deflayer empty
  _        _    _    _    _    _    _    _    _    _    _    _    _    
  _        _    _    _    _    _    _    _    _    _    _    _    _    _
  _        _    _    _    _    _    _    _    _    _    _    _    _    _
  _        _    _    _    _    _    _    _    _    _    _    _    _ 
  _        _    _    _    _    _    _    _    _    _    _    _ 
  _        _    _              _              _    _    _    _
)
